<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClusterUtils</name>
    </assembly>
    <members>
        <member name="T:ClusterUtils.Component">
            <summary>
            General class for components:
                - Node
                - Manager
                - Client
                - Server as backup
            
            Contains type and server info, and common methods for sending IClusterMessage to Server.
            
            </summary>
        </member>
        <member name="F:ClusterUtils.Component.ServerInfo">
            <summary>
            Address and port of server that this component is bound to.
            </summary>
        </member>
        <member name="F:ClusterUtils.Component.Type">
            <summary>
            Type of component.
            </summary>
        </member>
        <member name="M:ClusterUtils.Component.#ctor(ClusterUtils.ComponentConfig,System.String)">
            <summary>
            
            </summary>
            <param name="config">Config instance containing server info.</param>
            <param name="type">Type of component</param>
        </member>
        <member name="M:ClusterUtils.Component.LogRuntimeInfo">
            <summary>
            Method logging components type and server info.
            </summary>
        </member>
        <member name="M:ClusterUtils.Component.SendMessageSingleResponse(ClusterMessages.IClusterMessage)">
            <summary>
            Sends single message to server and waits for single response.
            </summary>
            <param name="message">Message to be sent.</param>
            <returns>Response from server.</returns>
        </member>
        <member name="M:ClusterUtils.Component.SendMessage(ClusterMessages.IClusterMessage)">
            <summary>
            General method for sending messages. Sends single message to server and waits for any responses.
            </summary>
            <param name="message">Message to be sent.</param>
            <returns>All received messages as XMLDocuments.</returns>
        </member>
        <member name="T:ClusterUtils.ComponentConfig">
            <summary>
            Container for components' configuration info - server's address and port.
            </summary>
        </member>
        <member name="M:ClusterUtils.ComponentConfig.GetConfigFromAppConfig">
            <summary>
            Retreives configuration from App.config file.
            </summary>
            <returns>Config from App.config</returns>
        </member>
        <member name="M:ClusterUtils.ComponentConfig.GetConfigFromArgs(System.String[])">
            <summary>
            Retreives configuration from command line arguments.
            </summary>
            <param name="arguments">Command line args.</param>
            <returns>Config from command line args.</returns>
        </member>
        <member name="M:ClusterUtils.ComponentConfig.GetComponentConfig(System.String[])">
            <summary>
            Retreives config from both App.config and command line.
            Command line arguments supress App.config settings.
            </summary>
            <param name="arguments">Command line arguments.</param>
            <returns>Actual component config.</returns>
        </member>
        <member name="T:ClusterUtils.Communication.ConnectionClient">
            <summary>
            Helper class for components to communicate with server.
            When instance of ConnectionClient is created, component may open connection with server.
            Than component may send messages to server and wait for response/responses. 
            Than connection is closed manually by component.
            </summary>
        </member>
        <member name="M:ClusterUtils.Communication.ConnectionClient.#ctor(ClusterUtils.ServerInfo)">
            <summary>
            
            </summary>
            <param name="serverInfo">Server address and port.</param>
        </member>
        <member name="M:ClusterUtils.Communication.ConnectionClient.Connect">
            <summary>
            Connects client with server. 
            </summary>
        </member>
        <member name="M:ClusterUtils.Communication.ConnectionClient.SendAndWaitForResponses(ClusterMessages.IClusterMessage)">
            <summary>
            Sends message to server and waits for responses.
            </summary>
            <param name="message">Message to be sent.</param>
            <returns>All possible responses.</returns>
        </member>
        <member name="M:ClusterUtils.Communication.ConnectionClient.Close">
            <summary>
            Closes sockets between server and client.
            </summary>
        </member>
        <member name="T:ClusterUtils.RegisteredComponent">
            <summary>
            General class for all components that register to main server:
                - Node
                - Manager
                - Server as backup
            Adds support for component registration and sending status message.
            </summary>
        </member>
        <member name="F:ClusterUtils.RegisteredComponent.Id">
            <summary>
            Id received from server after registration.
            </summary>
        </member>
        <member name="F:ClusterUtils.RegisteredComponent.ServerTimeout">
            <summary>
            Timeout received after registration. Status message is sent at least as frequent as ServerTimeout.
            </summary>
        </member>
        <member name="F:ClusterUtils.RegisteredComponent.StatusThreads">
            <summary>
            Container for thread statuses.
            </summary>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.#ctor(ClusterUtils.ComponentConfig,System.String)">
            <summary>
            
            </summary>
            <param name="config">Server address and port.</param>
            <param name="type">Component type.</param>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.Register">
            <summary>
            Register to server and process register response message.
            </summary>
            <returns>True on registration success, false otherwise.</returns>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.ProcessRegisterResponse(System.Xml.XmlDocument)">
            <summary>
            Process registration response - retreive Id assigned by server and timeout.
            </summary>
            <param name="response"></param>
            <returns>True on registration success, false otherwise.</returns>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.SendStatusMessage(System.Object,System.Timers.ElapsedEventArgs,ClusterMessages.IClusterMessage)">
            <summary>
            Event method sending status info.
            </summary>
            <param name="sender">ignored</param>
            <param name="e">ignored</param>
            <param name="message">Message to be sent.</param>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.KeepSendingStatus(Status,System.Int32)">
            <summary>
            Method initializing status message timer.
            </summary>
            <param name="message">Message to be sent.</param>
            <param name="msCycleTime">Sending loop time in miliseconds.</param>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.StartSendingStatus">
            <summary>
            Creates status message and timer for status message sending.
            </summary>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.ProcessNoOperationMessage(System.Xml.XmlDocument)">
            <summary>
            Method processing NoOperation message. Retreives backup info.
            </summary>
            <param name="xmlMessage">Received NoOperation message.</param>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.SendMessageNoResponse(ClusterMessages.IClusterMessage)">
            <summary>
            Helper method for sending message where's no response is expected.
            </summary>
            <param name="message">Message to be sent.</param>
        </member>
        <member name="M:ClusterUtils.RegisteredComponent.ProcessMessages(System.Collections.Generic.IEnumerable{System.Xml.XmlDocument})">
            <summary>
            Method for handling all messages that given components may handle.
            </summary>
            <param name="responses">Messages received from server.</param>
        </member>
        <member name="T:ClusterUtils.Serializers">
            <summary>
            Helper class for serializing/deserializing objects.
            </summary>
        </member>
        <member name="M:ClusterUtils.Serializers.ObjectToByteArray``1(``0)">
            <summary>
            
            </summary>
            <param name="obj">Object to be serialized.</param>
            <returns>Object as bytes.</returns>
        </member>
        <member name="M:ClusterUtils.Serializers.ByteArrayObject``1(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bObj">Object as bytes array.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="T:ClusterUtils.ServerInfo">
            <summary>
            Simple container for basic server informations.
            </summary>
        </member>
    </members>
</doc>
